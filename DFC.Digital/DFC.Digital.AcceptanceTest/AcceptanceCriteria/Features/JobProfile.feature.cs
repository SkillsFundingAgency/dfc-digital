// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DFC.Digital.AcceptanceTest.AcceptanceCriteria.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class JobProfileFeature : Xunit.IClassFixture<JobProfileFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
        private string _browser;
        
#line 1 "JobProfile.feature"
#line hidden
        
        public JobProfileFeature(JobProfileFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "JobProfile", "As a Citizen I want to be able to view the JobProfile Page So that I can view the" +
                    " job profile details", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
var clonedScenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(scenarioInfo.Title, System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Union(scenarioInfo.Tags, new string[] { $"browser:{_browser}" })));
testRunner.OnScenarioStart(clonedScenarioInfo);
testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.TraitAttribute("FeatureTitle", "JobProfile")]
        [Xunit.TraitAttribute("Description", "[DFC-1342 - A2] Profile Page displays the correct breadcrumb and links to the Hom" +
            "epage")]
        [Xunit.TheoryAttribute(DisplayName="[DFC-1342 - A2] Profile Page displays the correct breadcrumb and links to the Hom" +
            "epage")]
        [Xunit.InlineDataAttribute("#{browsers}#")]
        public virtual void DFC_1342_A2ProfilePageDisplaysTheCorrectBreadcrumbAndLinksToTheHomepage(string browser)
        {
            this._browser = browser;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[DFC-1342 - A2] Profile Page displays the correct breadcrumb and links to the Hom" +
                    "epage", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("that I am viewing the \'dental-nurse\' job profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.Then("the correct \'Job profile\' breadcrumb is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 8
 testRunner.When("I click the Find a Career breadcrumb on \'Job profile\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I am redirected to the homepage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TraitAttribute("FeatureTitle", "JobProfile")]
        [Xunit.TraitAttribute("Description", "[DFC-1335 - A1] Profile Page displays Related careers with no more than 5 shown a" +
            "nd takes you to the correct carers page")]
        [Xunit.TheoryAttribute(DisplayName="[DFC-1335 - A1] Profile Page displays Related careers with no more than 5 shown a" +
            "nd takes you to the correct carers page")]
        [Xunit.InlineDataAttribute("#{browsers}#")]
        public virtual void DFC_1335_A1ProfilePageDisplaysRelatedCareersWithNoMoreThan5ShownAndTakesYouToTheCorrectCarersPage(string browser)
        {
            this._browser = browser;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[DFC-1335 - A1] Profile Page displays Related careers with no more than 5 shown a" +
                    "nd takes you to the correct carers page", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
 testRunner.Given("that I am viewing the \'plumber\' job profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.Then("the Related Careers section is displayed on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.And("there should be no more than 5 careers", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.When("I click on career title \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("I am redirected to the correct job profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TraitAttribute("FeatureTitle", "JobProfile")]
        [Xunit.TraitAttribute("Description", "[DFC-1508 - A1] Profile Page displays related courses. Select the course title an" +
            "d ensure you are redirected to the Course Directory")]
        [Xunit.TheoryAttribute(DisplayName="[DFC-1508 - A1] Profile Page displays related courses. Select the course title an" +
            "d ensure you are redirected to the Course Directory")]
        [Xunit.InlineDataAttribute("#{browsers}#")]
        public virtual void DFC_1508_A1ProfilePageDisplaysRelatedCourses_SelectTheCourseTitleAndEnsureYouAreRedirectedToTheCourseDirectory(string browser)
        {
            this._browser = browser;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[DFC-1508 - A1] Profile Page displays related courses. Select the course title an" +
                    "d ensure you are redirected to the Course Directory", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given("that I am viewing the \'Electrician\' job profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.When("I click on the training course title no \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("take me to the training course page on Course Directory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
 testRunner.When("I click to go back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("take me back to the job profile I had been viewing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TraitAttribute("FeatureTitle", "JobProfile")]
        [Xunit.TraitAttribute("Description", "[DFC-1508 - A2] Selecting the Find courses near you link on the job profile page " +
            "for courses should take me to the search page on Course Directory")]
        [Xunit.TheoryAttribute(DisplayName="[DFC-1508 - A2] Selecting the Find courses near you link on the job profile page " +
            "for courses should take me to the search page on Course Directory")]
        [Xunit.InlineDataAttribute("#{browsers}#")]
        public virtual void DFC_1508_A2SelectingTheFindCoursesNearYouLinkOnTheJobProfilePageForCoursesShouldTakeMeToTheSearchPageOnCourseDirectory(string browser)
        {
            this._browser = browser;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[DFC-1508 - A2] Selecting the Find courses near you link on the job profile page " +
                    "for courses should take me to the search page on Course Directory", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("that I am viewing the \'nurse\' job profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When("I click Find courses near you", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("take me to the search page on Course Directory", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
 testRunner.When("I click to go back", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then("take me back to the job profile I had been viewing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TraitAttribute("FeatureTitle", "JobProfile")]
        [Xunit.TraitAttribute("Description", "Apprenticeship displayed on Job Profile Page")]
        [Xunit.TheoryAttribute(DisplayName="Apprenticeship displayed on Job Profile Page")]
        [Xunit.InlineDataAttribute("#{browsers}#")]
        [Xunit.TraitAttribute("Category", "EndToEnd")]
        public virtual void ApprenticeshipDisplayedOnJobProfilePage(string browser)
        {
            this._browser = browser;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apprenticeship displayed on Job Profile Page", new string[] {
                        "EndToEnd"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
 testRunner.Given("that I am viewing the \'plumber\' job profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.Then("the correct sections should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
 testRunner.And("\'2\' apprenticeships should be displayed with valid data", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TraitAttribute("FeatureTitle", "JobProfile")]
        [Xunit.TraitAttribute("Description", "Apprenticeship are not displayed on Job Profile Page and correct message shown")]
        [Xunit.TheoryAttribute(DisplayName="Apprenticeship are not displayed on Job Profile Page and correct message shown")]
        [Xunit.InlineDataAttribute("#{browsers}#")]
        [Xunit.TraitAttribute("Category", "EndToEnd")]
        public virtual void ApprenticeshipAreNotDisplayedOnJobProfilePageAndCorrectMessageShown(string browser)
        {
            this._browser = browser;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apprenticeship are not displayed on Job Profile Page and correct message shown", new string[] {
                        "EndToEnd"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
 testRunner.Given("that I am viewing the \'border-force-officer\' job profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
 testRunner.Then("the correct sections should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
 testRunner.And("the no apprenticeships message should be shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TraitAttribute("FeatureTitle", "JobProfile")]
        [Xunit.TraitAttribute("Description", "Valid Search on Job Profile Page")]
        [Xunit.TheoryAttribute(DisplayName="Valid Search on Job Profile Page")]
        [Xunit.InlineDataAttribute("#{browsers}#")]
        [Xunit.TraitAttribute("Category", "EndToEnd")]
        public virtual void ValidSearchOnJobProfilePage(string browser)
        {
            this._browser = browser;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Valid Search on Job Profile Page", new string[] {
                        "EndToEnd"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given("that I am viewing the \'Chef\' job profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.Then("the search section should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 69
 testRunner.When("I search using \'nurse\' on the profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.Then("the first result is \'shown\' on the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.TraitAttribute("FeatureTitle", "JobProfile")]
        [Xunit.TraitAttribute("Description", "[DFC-1763 & DFC-1761] SignPost banner is displayed on JP page and redirects to th" +
            "e corresponding BAU JP Page")]
        [Xunit.TheoryAttribute(DisplayName="[DFC-1763 & DFC-1761] SignPost banner is displayed on JP page and redirects to th" +
            "e corresponding BAU JP Page")]
        [Xunit.InlineDataAttribute("#{browsers}#")]
        public virtual void DFC_1763DFC_1761SignPostBannerIsDisplayedOnJPPageAndRedirectsToTheCorrespondingBAUJPPage(string browser)
        {
            this._browser = browser;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[DFC-1763 & DFC-1761] SignPost banner is displayed on JP page and redirects to th" +
                    "e corresponding BAU JP Page", ((string[])(null)));
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
 testRunner.Given("that I am viewing the \'GP\' job profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
 testRunner.Then("the \'profile\' page signpost banner is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
 testRunner.When("I click on the \'profile\' page banner link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
 testRunner.Then("I am redirected to corresponding \'BAU\' profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 78
 testRunner.When("I click the BAU JP signpost banner", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.Then("I am redirected to corresponding \'Beta\' profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                JobProfileFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                JobProfileFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
