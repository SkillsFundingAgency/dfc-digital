// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DFC.Digital.Service.AzureSearch.IntegrationTests.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class JobProfileAutosuggestReturnsSuggestionsUsingAzureSearchSuggestersFeature : Xunit.IClassFixture<JobProfileAutosuggestReturnsSuggestionsUsingAzureSearchSuggestersFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "JobProfileAutosuggest.feature"
#line hidden
        
        public JobProfileAutosuggestReturnsSuggestionsUsingAzureSearchSuggestersFeature(JobProfileAutosuggestReturnsSuggestionsUsingAzureSearchSuggestersFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "JobProfileAutosuggest returns suggestions using Azure Search Suggesters", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="[DFC-1496 - A1] User uses a suggestion term to find suggestions agianst the <AltT" +
            "itle> AND the <Title> on DIFFERENT profiles")]
        [Xunit.TraitAttribute("FeatureTitle", "JobProfileAutosuggest returns suggestions using Azure Search Suggesters")]
        [Xunit.TraitAttribute("Description", "[DFC-1496 - A1] User uses a suggestion term to find suggestions agianst the <AltT" +
            "itle> AND the <Title> on DIFFERENT profiles")]
        public virtual void DFC_1496_A1UserUsesASuggestionTermToFindSuggestionsAgianstTheAltTitleANDTheTitleOnDIFFERENTProfiles()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[DFC-1496 - A1] User uses a suggestion term to find suggestions agianst the <AltT" +
                    "itle> AND the <Title> on DIFFERENT profiles", null, ((string[])(null)));
#line 4
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "AlternativeTitle"});
            table1.AddRow(new string[] {
                        "Counsellor",
                        "Therapist, psychotherapist"});
            table1.AddRow(new string[] {
                        "Money adviser",
                        "Debt counsellor"});
            table1.AddRow(new string[] {
                        "Advertising copywriter",
                        ""});
            table1.AddRow(new string[] {
                        "Pilot",
                        "Co-Pilot"});
            table1.AddRow(new string[] {
                        "General practitioner (GP)",
                        "Doc"});
            table1.AddRow(new string[] {
                        "Colon hydrotherapist",
                        ""});
            table1.AddRow(new string[] {
                        "Police constable",
                        ""});
#line 5
  testRunner.Given("the following job profiles exist:", ((string)(null)), table1, "Given ");
#line 14
  testRunner.When("I type the term \'Cou\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
  testRunner.Then("the result list will contain \'5\' suggestion(s)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "AlternativeTitle"});
            table2.AddRow(new string[] {
                        "Counsellor",
                        "Therapist, psychotherapist"});
            table2.AddRow(new string[] {
                        "Money adviser",
                        "Debt counsellor"});
            table2.AddRow(new string[] {
                        "Advertising copywriter",
                        ""});
            table2.AddRow(new string[] {
                        "Colon hydrotherapist",
                        ""});
            table2.AddRow(new string[] {
                        "Police constable",
                        ""});
#line 16
  testRunner.And("the suggestion are listed in no specific order:", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                JobProfileAutosuggestReturnsSuggestionsUsingAzureSearchSuggestersFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                JobProfileAutosuggestReturnsSuggestionsUsingAzureSearchSuggestersFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
