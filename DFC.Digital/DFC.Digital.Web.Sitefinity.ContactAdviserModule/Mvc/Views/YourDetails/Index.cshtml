@using DFC.Digital.Web.Sitefinity.ContactUsModule.RazorHelpers
@model DFC.Digital.Web.Sitefinity.ContactUsModule.Mvc.Models.ContactUsViewModel

@Html.Partial("ErrorSummary")
<h1 class="govuk-heading-xl">Enter your details</h1>
<p class="govuk-body-m">We need your details so that one of our advisers can contact you.</p>
<p class="govuk-body-m">Our advisers will use your date of birth and postcode to give you information that's relevant to you, for example on courses and funding.</p>
@using (Html.BeginForm("Index", "YourDetails", FormMethod.Post, new { id = "userform" }))
{
    <fieldset class="govuk-fieldset">

        <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.FirstName), ViewData.ModelState)">
            @Html.LabelFor(x => x.FirstName, "First name", new { @class = "govuk-label" })
            @Html.ValidationMessageFor(x => x.FirstName, null, new { @class = "govuk-error-message" })
            @Html.TextBoxFor(x => x.FirstName, new { @class = "govuk-input govuk-!-width-two-thirds" })
        </div>

        <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.FirstName), ViewData.ModelState)">
            @Html.LabelFor(x => x.LastName, "Last name", new { @class = "govuk-label" })
            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "govuk-error-message" })
            @Html.TextBoxFor(x => x.LastName, new { @class = "govuk-input govuk-!-width-two-thirds" })
        </div>

        <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.Email), ViewData.ModelState)">
            @Html.LabelFor(x => x.Email, "Email Address", new { @class = "govuk-label" })
            @Html.ValidationMessageFor(x => x.Email, null, new { @class = "govuk-error-message" })
            @Html.TextBoxFor(x => x.Email, new { @class = "govuk-input govuk-!-width-two-thirds" })
        </div>

        <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.EmailConfirm), ViewData.ModelState)">
            @Html.LabelFor(x => x.EmailConfirm, "Confirm email address", new { @class = "govuk-label" })
            @Html.ValidationMessageFor(x => x.EmailConfirm, null, new { @class = "govuk-error-message" })
            @Html.TextBoxFor(x => x.EmailConfirm, new { @class = "govuk-input govuk-!-width-two-thirds" })
        </div>
        <div class="govuk-form-group">
            <label class="govuk-label" for="dob-day">
                Date of birth
            </label>
            <span id="dob-hint" class="govuk-hint">For example, 31 3 1980</span>
            <div class="govuk-date-input" id="dob">
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        @Html.LabelFor(x => x.DOBDay, "Day", new { @class = "govuk-label govuk-date-input__label" })
                        @Html.TextBoxFor(x => x.DOBDay, new { @class = "govuk-input govuk-date-input__input govuk-input--width-2", type = "number", autocomplete = "bday-day", pattern = "[0-9]*" })
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        @Html.LabelFor(x => x.DOBMonth, "Month", new { @class = "govuk-label govuk-date-input__label" })
                        @Html.TextBoxFor(x => x.DOBMonth, new { @class = "govuk-input govuk-date-input__input govuk-input--width-2", type = "number", autocomplete = "bday-month", pattern = "[0-9]*" })
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        @Html.LabelFor(x => x.DOBYear, "Year", new { @class = "govuk-label govuk-date-input__label" })
                        @Html.TextBoxFor(x => x.DOBYear, new { @class = "govuk-input govuk-date-input__input govuk-input--width-2", type = "number", autocomplete = "bday-year", pattern = "[0-9]*" })
                    </div>
                </div>
            </div>
        </div>
        <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.PostCode), ViewData.ModelState)">
            @Html.LabelFor(x => x.PostCode, "Post code", new { @class = "govuk-label" })
            <span id="postcode-hint" class="govuk-hint">For example, SW1A 1AA</span>
            @Html.ValidationMessageFor(x => x.PostCode, null, new { @class = "govuk-error-message" })
            @Html.TextBoxFor(x => x.PostCode, new { @class = "govuk-input govuk-input--width-10" })
        </div>
        <div class="govuk-form-group">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                    <h1 class="govuk-fieldset__heading">
                        Terms and conditions
                    </h1>
                </legend>
                <div class="govuk-checkboxes">
                    <div class="govuk-checkboxes__item">
                        @Html.CheckBoxFor(x => x.TandCChecked, new { @class = "govuk-checkboxes__input", id = "TandCChecked" })
                        <label class="govuk-label govuk-checkboxes__label" for="TandCChecked">
                            I accept the <a href="https://nationalcareersservice.direct.gov.uk/about-us/terms-and-conditions">terms and conditions</a> and I am 13 or over
                        </label>
                    </div>
                </div>
            </fieldset>
        </div>

    </fieldset>
    <div class="govuk-form-group">
        <button type="submit" class="govuk-button">
            Send
        </button>
    </div>
}
