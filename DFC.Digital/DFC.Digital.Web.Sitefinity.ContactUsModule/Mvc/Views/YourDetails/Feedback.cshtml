@model DFC.Digital.Web.Sitefinity.ContactUsModule.Mvc.Models.ContactUsWithConsentViewModel

@Html.Partial("ErrorSummary")
<h1 class="govuk-heading-xl">@Model.PageTitle</h1>
<p class="govuk-body-m">@Html.Raw(Model.PageIntroduction)</p>
@using (Html.BeginForm("Submit", "YourDetails", FormMethod.Post, new { id = "userform", role = "form" }))
{

    <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.Firstname), ViewData.ModelState)">
        @Html.LabelFor(x => x.Firstname, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.Firstname, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.Firstname, new { @class = "govuk-input govuk-!-width-two-thirds", name = "PersonalContactDetails.Firstname" })
    </div>

    <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.Lastname), ViewData.ModelState)">
        @Html.LabelFor(x => x.Lastname, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.Lastname, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.Lastname, new { @class = "govuk-input govuk-!-width-two-thirds", name = "PersonalContactDetails.Lastname" })
    </div>

    <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.EmailAddress), ViewData.ModelState)">
        @Html.LabelFor(x => x.EmailAddress, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.EmailAddress, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.EmailAddress, new { @class = "govuk-input govuk-!-width-two-thirds", name = "PersonalContactDetails.EmailAddress" })
    </div>

    <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.ConfirmEmailAddress), ViewData.ModelState)">
        @Html.LabelFor(x => x.ConfirmEmailAddress, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.ConfirmEmailAddress, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.ConfirmEmailAddress, new { @class = "govuk-input govuk-!-width-two-thirds", name = "PersonalContactDetails.ConfirmEmailAddress" })
    </div>

    <div class="govuk-form-group">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                <h2 class="govuk-fieldset__heading">
                  @Model.DoYouWantUsToContactUsText
                </h2>
            </legend>
            <div class="govuk-radios govuk-radios--inline">
                <div class="govuk-radios__item">
                    @Html.RadioButtonFor(model => model.IsContactable, "True", new { @class = "govuk-radios__input", name = "radio-inline-group", id = "radio-inline-1", @checked = "checked" })
                    @Html.LabelFor(model => model.IsContactable, "Yes", new { @class = "govuk-label govuk-radios__label" })
                </div>
                <div class="govuk-radios__item">
                    @Html.RadioButtonFor(model => model.IsContactable, "False", new { @class = "govuk-radios__input", name = "radio-inline-group", id = "radio-inline-2" })
                    @Html.LabelFor(model => model.IsContactable, "No", new { @class = "govuk-label govuk-radios__label" })

                </div>
            </div>
        </fieldset>
    </div>

    <div class="govuk-form-group @Html.GetErrorClass(nameof(Model.AcceptTermsAndConditions), ViewData.ModelState)">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                <h3 class="govuk-fieldset__heading">
                    @Model.TermsAndConditionsText
                </h3>
            </legend>
            @Html.ValidationMessageFor(x => x.AcceptTermsAndConditions, null, new { @class = "govuk-error-message" })
            <div class="govuk-checkboxes">
                <div class="govuk-checkboxes__item">
                    @Html.CheckBoxForSimple(model => model.AcceptTermsAndConditions, new { @class = "govuk-checkboxes__input" })
                    @Html.LabelWithHintFor(m => m.AcceptTermsAndConditions, new { @class = "govuk-label govuk-checkboxes__label" })
                </div>
            </div>
        </fieldset>
    </div>

    
    <div class="govuk-form-group">
        <button type="submit" class="govuk-button">@Model.SendButtonText</button>
    </div>
}
