@using DFC.Digital.Data.Model
@using DFC.Digital.Web.Core
@using DFC.Digital.Core
@model CourseFiltersViewModel


<div class="govuk-form-group">
    @Html.LabelFor(x => x.Postcode, Model.FilterLocationLabel, new { @class = "govuk-label" })
    @Html.TextBoxFor(x => x.Postcode, new { @class = "govuk-input govuk-!-width-full locationfield", data_val_postcode = Constants.CourseSearchLocationRegularExpression })
</div>

<div id="distanceFormGroup" style="display: @(Model.IsDistanceLocation ? "block" : "none")" class="govuk-form-group">
    <div class="govuk-inset-text" id="distance">
        @Html.LabelFor(x => x.Distance, Model.WithinText, new { @class = "govuk-label" })

        @Html.DropDownListFor(model => model.Distance,
            new List<SelectListItem>
            {
                new SelectListItem{Text="5 Miles", Value="5"},
                new SelectListItem{Text="10 Miles", Value="10"},
                new SelectListItem{Text="30 Miles", Value="30"},
                new SelectListItem{Text="45 Miles", Value="45"},
                new SelectListItem{Text="60 Miles", Value="60"},
                new SelectListItem{Text="75 Miles", Value="75"},
           },
            null,
            new { @class = "govuk-select" })

    </div>
</div>

<div class="govuk-form-group">
    @Html.LabelFor(x => x.Provider, Model.FilterProviderLabel, new { @class = "govuk-label" })
    @Html.TextBoxFor(x => x.Provider, new { @class = "govuk-input govuk-!-width-full" })
</div>


<div class="filters-container">
    <div class="filter-label">
        <h2 class="govuk-heading-s govuk-!-margin-0">@Model.CourseHoursSectionText</h2>
    </div>
    <div class="filter-box">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-visually-hidden">Choose desired course hours</legend>
            <div class="govuk-radios">
                @Html.GovUkEnumRadioButtonFor(model => model.CourseHours, null, "govuk-!-font-size-16")
            </div>
        </fieldset>
    </div>
</div>

<div class="filters-container">
    <div class="filter-label">
        <h2 class="govuk-heading-s govuk-!-margin-0">@Model.CourseTypeSectionText</h2>
    </div>

    <div class="filter-box">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-visually-hidden">Choose desired course type</legend>
            <div class="govuk-radios">
                @Html.GovUkEnumRadioButtonFor(model => model.CourseType, null, "govuk-!-font-size-16")
            </div>
        </fieldset>
    </div>

</div>
<div class="filters-container">
    <div class="filter-label">
        <h2 class="govuk-heading-s govuk-!-margin-0">@Model.StartDateSectionText</h2>
    </div>
    <div class="filter-box conditional-box">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-visually-hidden">@Model.StartDateSectionText</legend>
            <div class="govuk-radios govuk-radios--conditional" data-module="radios">
                <div class="govuk-form-group">
                    @Html.GovUkEnumRadioButtonFor(model => model.StartDate, "conditional-start-date-conditional-1", "govuk-!-font-size-16")

                    <div class="govuk-radios__conditional @(Model.StartDate == StartDate.SelectDateFrom ? string.Empty : "govuk-radios__conditional--hidden") conditional-date" id="conditional-start-date-conditional-1">
                        <div class="govuk-form-group">
                            @Html.LabelFor(x => x.StartDateDay, "Start date", new { @class = "govuk-visually-hidden" })

                            <span class="govuk-hint govuk-!-font-size-16">@Model.StartDateExampleText</span>
                            <div class="govuk-date-input" id="startDate-Date">
                                <div class="govuk-date-input__item">
                                    <div class="govuk-form-group">

                                        @Html.LabelFor(x => x.StartDateDay, "Day", new { @class = "govuk-label govuk-date-input__label govuk-!-font-size-14" })
                                        @Html.TextBoxFor(x => x.StartDateDay, new { @class = "govuk-input govuk-date-input__input govuk-input--width-2", type = "number", pattern = "[0-9]*", name = "CourseFiltersModel.StartDateDay" })

                                    </div>
                                </div>
                                <div class="govuk-date-input__item">
                                    <div class="govuk-form-group">
                                        @Html.LabelFor(x => x.StartDateMonth, "Month", new { @class = "govuk-label govuk-date-input__label govuk-!-font-size-14" })
                                        @Html.TextBoxFor(x => x.StartDateMonth, new { @class = "govuk-input govuk-date-input__input govuk-input--width-2", type = "number", pattern = "[0-9]*", name = "CourseFiltersModel.StartDateMonth" })

                                    </div>
                                </div>
                                <div class="govuk-date-input__item">
                                    <div class="govuk-form-group">
                                        @Html.LabelFor(x => x.StartDateYear, "Year", new { @class = "govuk-label govuk-date-input__label govuk-!-font-size-14" })
                                        @Html.TextBoxFor(x => x.StartDateYear, new { @class = "govuk-input govuk-date-input__input govuk-input--width-4", type = "number", pattern = "[0-9]*", name = "CourseFiltersModel.StartDateYear" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>


</div>
<div class="submit">

    <button class="js-enabled gem-c-button govuk-button novalidate" type="submit">@Model.ApplyFiltersText</button>

</div> 
