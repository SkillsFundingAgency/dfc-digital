{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for all resources created for the project (except storage account, see below). Should be in the format dfc-env-proj"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the project storage account (as it follows a different naming convention)"
      }
    },
    "appServicePlanSize": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
          "description": "Size of the instances in the app service plan"
      },
      "allowedValues": [
        "1",
        "2",
        "3"
      ]
    },
    "appServicePlanInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
          "description": "Number of instances in the app service plan"
      }
    },
    "appHostName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Custom host name for the website"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Key vault with the certificate in - only used if appHostName is specified"
      }
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group for the key vault - only used if appHostName is specified"
      }
    },
    "certificateName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
          "description": "Name of the secret (certificate) as it appears in key vault - only used if appHostName is specified"
      }
    },
    "aseHostingEnvironmentName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional App Service Environment for the app service to exist within. If not supplied creates a stand alone app service plan."
      }
    },
    "aseResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource group the App Service Environment belongs to - only required if aseHostingEnvironmentName specified"
      }
    }
  },
  "variables": {
    "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
    "appInsightsName": "[concat(parameters('projectPrefix'),'-ai')]",
    "appServiceName": "[concat(parameters('projectPrefix'),'-as')]",
    "appServicePlanName": "[concat(parameters('projectPrefix'),'-asp')]",
    "cosmosDbSQLName": "[concat(parameters('projectPrefix'),'-cdb')]",
    "redisCacheName": "[concat(parameters('projectPrefix'),'-rds')]",
    "azureSearchName": "[concat(parameters('projectPrefix'),'-sch')]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "exploreCareersAppInsights",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "attachedService": {
            "value": "[variables('appServiceName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "exploreCareersStorage",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "exploreCareersAppServicePlan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "aspSize": {
            "value": "[parameters('appServicePlanSize')]"
          },
          "aspInstances": {
            "value": "[parameters('appServicePlanInstances')]"
          },
          "aseHostingEnvironmentName": {
            "value": "[parameters('aseHostingEnvironmentName')]"
          },
          "aseResourceGroup": {
            "value": "[parameters('aseResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "exploreCareersCertificates",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[greater(length(parameters('appHostName')),0)]",
      "dependsOn": [
        "exploreCareersAppServicePlan"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'certificate.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultCertificateName": {
            "value": "[parameters('certificateName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('keyVaultResourceGroup')]"
          },
          "serverFarmId": {
            "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "exploreCareersAppService",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "exploreCareersCertificates",
        "exploreCareersAppInsights",
        "exploreCareersStorage",
        "exploreCareersAppServicePlan"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "appServiceName": {
            "value": "[variables('appServiceName')]"
          },
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "appServicePlanResourceGroup": {
            "value": "[resourcegroup().name]"
          },
          "customHostName": {
            "value": "[parameters('appHostName')]"
          },
          "certificateThumbprint": {
            "value": "[if(greater(length(parameters('appHostName')),0), reference('exploreCareersCertificates').outputs.certificateThumbprint.value, '')]"
          },
          "deployStagingSlot": {
            "value": true
          },
          "appServiceAppSettings": {
            "value": [
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference('exploreCareersAppInsights').outputs.InstrumentationKey.value]"
              }
            ]
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "exploreCareersCosmosDB",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "cosmosDbName": {
            "value": "[variables('cosmosDbSQLName')]"
          },
          "cosmosApiType": {
            "value": "SQL"
          },
          "defaultConsistencyLevel": {
            "value": "Eventual"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "exploreCareersSearch",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'azure-search.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "azureSearchName": {
            "value": "[variables('azureSearchName')]"
          },
          "azureSearchSku": {
            "value": "standard"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "exploreCareersRedisCache",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('deploymentUrlBase'),'redis.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "redisName": {
            "value": "[variables('redisCacheName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "storageConnectionString": {
      "type": "string",
      "value": "[reference('exploreCareersStorage').outputs.storageConnectionString.value]"
    },
    "appServicePlanName": {
      "type": "string",
      "value": "[variables('appServicePlanName')]"
    },
    "appInsightInstrumentationKey": {
      "type": "string",
      "value": "[reference('exploreCareersAppInsights').outputs.InstrumentationKey.value]"
    },
    "appServiceName": {
      "type": "string",
      "value": "[variables('appServiceName')]"
    },
    "cosmosDbName": {
      "type": "string",
      "value": "[variables('cosmosDbSQLName')]"
    },
    "cosmosDbPrimaryKey": {
      "type": "securestring",
      "value": "[reference('exploreCareersCosmosDB').outputs.PrimaryMasterKey.value]"
    },
    "redisCacheName": {
      "type": "string",
      "value": "[variables('redisCacheName')]"
    },
    "redisCacheConnectionString": {
      "type": "securestring",
      "value": "[reference('exploreCareersRedisCache').outputs.redisConnectionString.value]"
    },
    "azureSearchName": {
      "type": "string",
      "value": "[variables('azureSearchName')]"
    }
  }
}